#include <iostream>
using namespace std;

// класс, реализующий массив из 10 целых чисел
class Array10
{
private:
    int A[10]; // массив
    int n; // количество элементов в массиве

public:
    // конструкторы класса
    // конструктор без параметров
    Array10()
    {
        n = 0;
    }

    // конструктор с 1 параметром
    Array10(int _n)
    {
        if ((_n >= 0) && (_n <= 10))
        {
            n = _n;
            for (int i = 0; i < n; i++)
                A[i] = 0; // обнулить массив
        }
        else
            n = 0;
    }

    // методы доступа к элементам массива
    // прочитать количество элементов массива
    int GetN()
    {
        return n;
    }

    // записать в элемент массива значение
    void SetAi(int index, int item)
    {
        if ((index>=0)&&(index<10))
            A[index] = item;
    }

    // взять значение по индексу
    // внутренний метод
    int GetAi(int index)
    {
        return A[index];
    }

    // перегрузка оператора [] получения элемента массива
    // операторная функция, реализованная внутри класса
    int& operator[](int index)
    {
        return A[index];
    }
};

void main()
{
    // оператор индексирования массива []
    Array10 A1(10);

    // сформировать A1 = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
    for (int i = 1; i <= 10; i++)
        A1[i - 1] = i; // вызов операторной функции operator[]() класса Array10

    // проверка
    int t;

    t = A1[3]; // вызов операторной функции, t = 4

    // Оператор [] в левой части оператора присваивания
    A1[5] = 205;
    t = A1.GetAi(5); // t = 205

    cout << "t = " << t << endl;
}